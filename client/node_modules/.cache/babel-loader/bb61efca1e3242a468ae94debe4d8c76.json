{"ast":null,"code":"import _regeneratorRuntime from \"/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/app/src/Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Fib =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fib, _Component);\n\n  function Fib() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Fib);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Fib)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      seenIndexes: [],\n      values: [],\n      index: ''\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return axios.post('/api/values', {\n                  index: _this.state.index\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Fib, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchValues();\n      this.fetchIndexes();\n    }\n  }, {\n    key: \"fetchValues\",\n    value: function () {\n      var _fetchValues = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var values;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get('/api/values/current');\n\n              case 2:\n                values = _context2.sent;\n                this.setState({\n                  values: values.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchValues() {\n        return _fetchValues.apply(this, arguments);\n      }\n\n      return fetchValues;\n    }()\n  }, {\n    key: \"fetchIndexes\",\n    value: function () {\n      var _fetchIndexes = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var seenIndexes;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get('api/values/all');\n\n              case 2:\n                seenIndexes = _context3.sent;\n                this.setState({\n                  seenIndexes: seenIndexes.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fetchIndexes() {\n        return _fetchIndexes.apply(this, arguments);\n      }\n\n      return fetchIndexes;\n    }()\n  }, {\n    key: \"renderSeenIndexes\",\n    value: function renderSeenIndexes() {\n      return this.state.seenIndexes.map(function (_ref2) {\n        var number = _ref2.number;\n        return number;\n      }).join(', ');\n    }\n  }, {\n    key: \"renderValues\",\n    value: function renderValues() {\n      var entries = [];\n\n      for (var key in this.state.values) {\n        entries.push(React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"For index \", key, \" I calculated \", this.state.values[key]));\n      }\n\n      return entries;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Enter your index:\"), React.createElement(\"input\", {\n        value: this.state.index,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            index: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Indexes I have seen:\"), this.renderSeenIndexes(), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Calculated Values:\"), this.renderValues());\n    }\n  }]);\n\n  return Fib;\n}(Component);\n\nexport default Fib;","map":{"version":3,"sources":["/app/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","fetchValues","fetchIndexes","get","setState","data","map","number","join","entries","key","push","target","value","renderSeenIndexes","renderValues"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE;AAHH,K;;UAuBRC,Y;;;;;+BAAe,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,KAAK,CAACC,cAAN;AADW;AAAA,uBAGLR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC5BJ,kBAAAA,KAAK,EAAE,MAAKH,KAAL,CAAWG;AADU,iBAA1B,CAHK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAjBI;AACf,WAAKK,WAAL;AACA,WAAKC,YAAL;AACH;;;;;;;;;;;;;uBAGwBX,KAAK,CAACY,GAAN,CAAU,qBAAV,C;;;AAAfR,gBAAAA,M;AACN,qBAAKS,QAAL,CAAc;AAACT,kBAAAA,MAAM,EAAEA,MAAM,CAACU;AAAhB,iBAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAI0Bd,KAAK,CAACY,GAAN,CAAU,gBAAV,C;;;AAApBT,gBAAAA,W;AACN,qBAAKU,QAAL,CAAc;AACVV,kBAAAA,WAAW,EAAEA,WAAW,CAACW;AADf,iBAAd;;;;;;;;;;;;;;;;;;wCAagB;AAChB,aAAO,KAAKZ,KAAL,CAAWC,WAAX,CAAuBY,GAAvB,CAA2B;AAAA,YAAGC,MAAH,SAAGA,MAAH;AAAA,eAAgBA,MAAhB;AAAA,OAA3B,EAAmDC,IAAnD,CAAwD,IAAxD,CAAP;AACH;;;mCAEc;AACX,UAAMC,OAAO,GAAG,EAAhB;;AAEA,WAAK,IAAIC,GAAT,IAAgB,KAAKjB,KAAL,CAAWE,MAA3B,EAAmC;AAC/Bc,QAAAA,OAAO,CAACE,IAAR,CACI;AAAK,UAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACeA,GADf,oBACkC,KAAKjB,KAAL,CAAWE,MAAX,CAAkBe,GAAlB,CADlC,CADJ;AAKH;;AAED,aAAOD,OAAP;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AACI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KADtB;AAEI,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBAAI,MAAI,CAACM,QAAL,CAAc;AAACR,YAAAA,KAAK,EAAEE,KAAK,CAACc,MAAN,CAAaC;AAArB,WAAd,CAAJ;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVJ,EAWK,KAAKC,iBAAL,EAXL,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbJ,EAcK,KAAKC,YAAL,EAdL,CADJ;AAmBH;;;;EAtEazB,S;;AAyElB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n    state = {\n        seenIndexes: [],\n        values: [],\n        index: ''\n    };\n\n    componentDidMount(){\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues() {\n        const values = await axios.get('/api/values/current');\n        this.setState({values: values.data});\n    }\n\n    async fetchIndexes() {\n        const seenIndexes = await axios.get('api/values/all');\n        this.setState({\n            seenIndexes: seenIndexes.data\n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        await axios.post('/api/values', {\n            index: this.state.index\n        });\n    }\n\n    renderSeenIndexes() {\n        return this.state.seenIndexes.map(({ number }) => number).join(', ')\n    }\n\n    renderValues() {\n        const entries = [];\n        \n        for (let key in this.state.values) {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            )\n        }\n\n        return entries;\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter your index:</label>\n                    <input \n                        value={this.state.index}\n                        onChange={event => this.setState({index: event.target.value})}\n                    />\n                    <button>Submit</button>\n                </form>\n\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndexes()}\n\n                <h3>Calculated Values:</h3>\n                {this.renderValues()}\n\n            </div>\n        )\n    }\n}\n\nexport default Fib;"]},"metadata":{},"sourceType":"module"}